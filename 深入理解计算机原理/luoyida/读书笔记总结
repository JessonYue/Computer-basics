第一章，描述了程序编译执行的过程。还简单讲述了进程、线程、高速缓存、CPU之间如何相互协调工作。
总结：对流程有个初步的了解，但对某些名词的解释不是很懂，书上提示后面会有详细描述，第一章先这样。

第二章，讲述了一些基本的数据类型用于展示信息，对于整数、浮点数还比较好理解，对于编码方式看着有点懵逼，尤其是那复杂的数学公式，多看几次，这里不太好理解。

第三章，该章节主要讲了汇编，我们写的c代码是如何翻译成汇编语言到机器的寄存器的，没学过汇编，前部分还好，后面看不来。

第四章，该章节主要讲了指令在CPU和寄存器中是怎样进行处理及运算的。说实话，很多地方看的是似懂非懂的。

第五章，该章节主要讲了一些情况下的优化，有消除循环的低效率、减少过程调用、消除不必要的内存引用、提高并行性。思考，这些优化能否在业务中应用。

第六章，该章节主要讲了存储器的结构，比较重要的是缓存结构。对于缓存命中不命中，怎么想都不对。

第七章，主要讲了关于编译链接，描述了linux如何将我们写的c代码转换成可执行的文件。说实话，不是很好理解，缺少实际的使用场景。

第八章，主要讲了异常的一些处理操作以及进程之间的异常处理。

第九章，主要讲了虚拟内存、动态内存分配、内存映射等linux下的内存处理知识。以及我们在编写C代码时常出现的内存相关错误，说实话，对指针还不是理解的很透彻，需要加强加深。

第十章，只要讲了linux下的一些文件相关操作，目前不直接涉及。

第十一章，主要讲了网络的相关只是，和一组套接字接口函数，通过它实现客户端-服务端结构。比较好理解，感觉需要多练练。

第十二章，讲了多进程的一些相关操作，需要更多的实际场景加以演练，才能加深印象。
